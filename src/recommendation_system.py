# -*- coding: utf-8 -*-
"""Recommendation System.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h6Gemnsx5xzJMO0ChISlc-GE0l1-u5aE
"""

import tensorflow as tf
import numpy as np

def SGD_RMF(u, i, r, N, M, K, lr, reg_U, reg_V, alpha, c):
  U = np.random.randn(K,N)
  V =np.random.randn(K,M)
  Y_U = np.zeros((K,N)) 
  Y_V = np.zeros((K,M)) 
  T_V = np.zeros(M) 
  S_R = np.zeros(N)
  S_UV = np.zeros(N)
  
  if u>N:
    U=np.append(U, np.random.randn(K,u-N), axis=1)
    Y_U=np.append(Y_U, np.zeros((K,u-N)), axis=1)
    S_R=np.append(S_R, np.zeros(u-N), axis=0)
    S_UV=np.append(S_UV, np.zeros(u-N), axis=0)
                
  if i>M:
    V=np.append(V, np.random.randn(K,i-M), axis=1)
    Y_V=np.append(Y_V, np.zeros((K,i-M)), axis=1) 
    T_V=np.append(T_V, np.zeros(i-M), axis=0)
                
  u=u-1
  i=i-1
  r=r-1
  
  sr=S_R[u]
  suv=S_UV[u]
  tv=T_V[i]
  
  G_ui=np.exp((U[:,u]).T.dot(V[:,i]))
  
  d_sr = sr + np.exp(r)
  d_suv = suv + np.exp(G_ui)
  d_G_ui = G_ui*(1-G_ui)
  Y_U[:,u] = (sr/d_sr)*Y_U[:,u] + ((np.exp(G_ui)/d_suv) - np.exp(r)/d_sr)*d_G_ui*V[:,i]
                
  Y_V[:,i] = (1-np.power(alpha,c*tv))*Y_V[:,i] + ((np.exp(G_ui)/d_suv) - np.exp(r)/d_sr)*d_G_ui*U[:,u]
                
  U[:,u] = U[:,u] - lr*(Y_U[:,u] + reg_U*U[:,u])
  V[:,i] = V[:,i] - lr*(Y_V[:,i] + reg_V*V[:,i])
                 
  S_R[u] = d_sr
  S_UV[u] = d_suv
  T_V[i] = tv+1
  
  return U,V

def add(x, n, i):
  a=[0]*(i-n)
  return tf.concat([x,a], 0)

def activation(x):
  return 1/(1+np.exp(-x))
activation=np.vectorize(activation)

N=4
M=3
K=2
lr=0.1
reg_U=3
reg_V=2
alpha=2
c=5
u=5
i=4
r=1
U,V =SGD_RMF(u, i, r, N, M, K, lr, reg_U, reg_V, alpha, c)

